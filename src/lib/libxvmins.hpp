#pragma once

class xVM;

#include "libxvm.hpp"

enum XVM_INSTRUCTION {
  XVM_INSTRUCTION_NULL,
  XVM_INSTRUCTION_RESET,
  XVM_INSTRUCTION_HALT,
  XVM_INSTRUCTION_SET,
  XVM_INSTRUCTIONTABLE_LENGTH
};
enum XVM_REGISTER { XVM_REGISTER_MEMORY, XVM_REGISTER_NUM, XVM_REGISTER_CHAR };

void XVM_INSTRUCTIONFUNC_NULL(xVM &vm);
void XVM_INSTRUCTIONFUNC_SET(xVM &vm);
void XVM_INSTRUCTIONFUNC_RESET(xVM &vm);
void XVM_INSTRUCTIONFUNC_HALT(xVM &vm);
void XVM_INSTRUCTIONFUNC_SET(xVM &vm);

// xVM instruction data type
typedef void (*XVM_INSTRUCTIONFUNC)(xVM &);

// xVM instruction table
extern XVM_INSTRUCTIONFUNC XVM_INSTRUCTIONTABLE[XVM_INSTRUCTIONTABLE_LENGTH];
